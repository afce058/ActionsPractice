name: Debug variables workflow
on:
  workflow_dispatch:
    inputs:
      param1:
        description: Parameter 1 for the workflow
        required: true
      param2:
        description: Parameter 2 for the workflow
        required: true
  repository_dispatch:
    types:
      - api_workflow_trigger

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output_param1: ${{ steps.capture.outputs.param1 }}
      output_param2: ${{ steps.capture.outputs.param2 }}
    steps:
      - name: Enable debug login
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
      
      - name: Capture parameters
        id: capture
        run: |
          echo "param1=${{ github.event.inputs.param1 }}" >> $GITHUB_OUTPUT
          echo "param2=${{ github.event.inputs.param2 }}" >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    outputs:
      output_param1: ${{ steps.output_step.outputs.PARAM1_FROM_JOB2 }}
    steps:
      - name: Simulate Failure with param1
        id: simulate
        run: |
          RANDOM_NUMBER=$(( RANDOM % 2 ))
          echo "::debug::Random number generated: $RANDOM_NUMBER"
          if [ "$RANDOM_NUMBER" -eq 10 ]; then
            echo "::error::Simulated failure with Param1!"
            exit 1
          else
            echo "Simulated success"
          fi
      
      - name: Set output for job 4
        id: output_step
        run: |
          echo "PARAM1_FROM_JOB2=${{ needs.job1.outputs.output_param1 }}" >> $GITHUB_OUTPUT
  
  job3:
    needs: job1
    runs-on: ubuntu-latest
    outputs:
      output_param2: ${{ steps.output_step.outputs.PARAM2_FROM_JOB3 }}
    steps:
      - name: Debug param2
        run: |
          echo "::debug::Debugging param2: ${{ needs.job1.outputs.output_param2 }}"
      - name: Set output for job 4
        id: output_step
        run: |
          echo "PARAM2_FROM_JOB3=${{ needs.job1.outputs.output_param2 }}" >> $GITHUB_OUTPUT

  job4:
    needs: [job2, job3]
    runs-on: ubuntu-latest
    steps:
      - name: Combining param2 from job 3 with repo var
        id: step1
        run: |
          COMBINED_1="${{ needs.job3.outputs.output_param2 }} - ${{ vars.REPO_VAR }}"
          echo "::debug::Combined 1: $COMBINED_1"
          echo "COMBINED_1=$COMBINED_1" >> $GITHUB_OUTPUT

      - name: Add param1 from job2
        id: step2
        run: |
          COMBINED_2="${{ steps.step1.outputs.COMBINED_1 }} - ${{ needs.job2.outputs.output_param1 }}"
          echo "::debug::Combined 2: $COMBINED_2"
          echo "COMBINED_2=$COMBINED_2" >> $GITHUB_OUTPUT

      - name: Final message
        run: |
          FINAL_MESSAGE="${{ steps.step2.outputs.COMBINED_2 }}"
          echo "::debug::Final message: $FINAL_MESSAGE"
          echo "Final message: $FINAL_MESSAGE"

      - name: Generate summary
        id: summary
        run: |
          echo "<h1>Workflow summary</h1>" >> $GITHUB_STEP_SUMMARY
          echo "<div><h2>Parameter1:</h2><p>${{ needs.job1.outputs.output_param1 }}</p></div>" >> $GITHUB_STEP_SUMMARY
          echo "<div><h2>Parameter2:</h2><p>${{ needs.job1.outputs.output_param2 }}</p></div>" >> $GITHUB_STEP_SUMMARY
          echo "<div><h2>Combined result:</h2><p>${{ steps.step2.outputs.COMBINED_2 }}</p></div>" >> $GITHUB_STEP_SUMMARY
          echo "<footer><p>Generated by Github Actions</p></footer>" >> $GITHUB_STEP_SUMMARY
